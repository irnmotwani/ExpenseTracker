{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\motwa\\\\OneDrive\\\\Desktop\\\\ExpenseTracker\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Import required React modules and components\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n\n// Import page components\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport Groups from './pages/Groups';\nimport Expenses from './pages/Expenses';\nimport Analytics from './pages/Analytics';\nimport SettlementTracking from './pages/SettlementTracking';\nimport KhataBook from './pages/KhataBook';\nimport PersonalKhataBook from './pages/PersonalKhataBook';\nimport CustomerDetails from './pages/CustomerDetails';\nimport AboutUs from './pages/AboutUs';\nimport HelpSupport from './pages/HelpSupport';\nimport Footer from './components/Footer';\nimport ChatBot from './components/ChatBot';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Authentication state - stores JWT token\n  const [token, setToken] = useState('');\n\n  // User state - stores user information\n  const [user, setUser] = useState(null);\n\n  /**\n   * Effect to check for existing token in localStorage\n   * This allows users to stay logged in after page refresh\n   */\n  useEffect(() => {\n    // Check if user was previously logged in\n    const savedToken = localStorage.getItem('token');\n    if (savedToken) {\n      setToken(savedToken);\n    }\n  }, []); // Run only once on app start\n\n  useEffect(() => {\n    if (token) {\n      // Fetch user data from API\n      fetchUserData();\n    }\n  }, [token]);\n  const fetchUserData = async () => {\n    try {\n      const response = await fetch('http://localhost:5055/api/test/current-user', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data.user);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      // Fallback user data\n      setUser({\n        username: 'User',\n        email: 'user@example.com'\n      });\n    }\n  };\n  const logout = () => {\n    setToken('');\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: token ?\n        /*#__PURE__*/\n        // Authenticated routes - user is logged in\n        _jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {\n              user: user,\n              logout: logout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/groups\",\n            element: /*#__PURE__*/_jsxDEV(Groups, {\n              token: token\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/expenses\",\n            element: /*#__PURE__*/_jsxDEV(Expenses, {\n              token: token\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/analytics\",\n            element: /*#__PURE__*/_jsxDEV(Analytics, {\n              token: token\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/settlements\",\n            element: /*#__PURE__*/_jsxDEV(SettlementTracking, {\n              token: token\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/khatabook\",\n            element: /*#__PURE__*/_jsxDEV(KhataBook, {\n              token: token\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/personal-khata\",\n            element: /*#__PURE__*/_jsxDEV(PersonalKhataBook, {\n              token: token\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/personal-khata/customer/:customerId\",\n            element: /*#__PURE__*/_jsxDEV(CustomerDetails, {\n              token: token\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/help\",\n            element: /*#__PURE__*/_jsxDEV(HelpSupport, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // Non-authenticated routes - user needs to login\n        _jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              setToken: setToken,\n              setUser: setUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), token && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }, this), token && /*#__PURE__*/_jsxDEV(ChatBot, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pKsStepf1JxroUbFEUsgs+jjA84=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Login","Dashboard","Groups","Expenses","Analytics","SettlementTracking","KhataBook","PersonalKhataBook","CustomerDetails","AboutUs","HelpSupport","Footer","ChatBot","jsxDEV","_jsxDEV","App","_s","token","setToken","user","setUser","savedToken","localStorage","getItem","fetchUserData","response","fetch","headers","Authorization","ok","data","json","error","console","username","email","logout","removeItem","children","className","style","minHeight","display","flexDirection","flex","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/motwa/OneDrive/Desktop/ExpenseTracker/client/src/App.js"],"sourcesContent":["// Import required React modules and components\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n\n// Import page components\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport Groups from './pages/Groups';\nimport Expenses from './pages/Expenses';\nimport Analytics from './pages/Analytics';\nimport SettlementTracking from './pages/SettlementTracking';\nimport KhataBook from './pages/KhataBook';\nimport PersonalKhataBook from './pages/PersonalKhataBook';\nimport CustomerDetails from './pages/CustomerDetails';\nimport AboutUs from './pages/AboutUs';\nimport HelpSupport from './pages/HelpSupport';\nimport Footer from './components/Footer';\nimport ChatBot from './components/ChatBot';\nimport './App.css';\n\nfunction App() {\n  // Authentication state - stores JWT token\n  const [token, setToken] = useState('');\n\n  // User state - stores user information\n  const [user, setUser] = useState(null);\n\n  /**\n   * Effect to check for existing token in localStorage\n   * This allows users to stay logged in after page refresh\n   */\n  useEffect(() => {\n    // Check if user was previously logged in\n    const savedToken = localStorage.getItem('token');\n    if (savedToken) {\n      setToken(savedToken);\n    }\n  }, []); // Run only once on app start\n\n  useEffect(() => {\n    if (token) {\n      // Fetch user data from API\n      fetchUserData();\n    }\n  }, [token]);\n\n  const fetchUserData = async () => {\n    try {\n      const response = await fetch('http://localhost:5055/api/test/current-user', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data.user);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      // Fallback user data\n      setUser({ username: 'User', email: 'user@example.com' });\n    }\n  };\n\n  const logout = () => {\n    setToken('');\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n\n  return (\n    <Router>\n      <div className=\"App\" style={{\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column'\n      }}>\n        {/* Main Content Area */}\n        <div style={{ flex: 1 }}>\n          {/* Conditional rendering based on authentication status */}\n          {token ? (\n            // Authenticated routes - user is logged in\n            <Routes>\n              <Route path=\"/dashboard\" element={<Dashboard user={user} logout={logout} />} />\n              <Route path=\"/groups\" element={<Groups token={token} />} />\n              <Route path=\"/expenses\" element={<Expenses token={token} />} />\n              <Route path=\"/analytics\" element={<Analytics token={token} />} />\n              <Route path=\"/settlements\" element={<SettlementTracking token={token} />} />\n              <Route path=\"/khatabook\" element={<KhataBook token={token} />} />\n              <Route path=\"/personal-khata\" element={<PersonalKhataBook token={token} />} />\n              <Route path=\"/personal-khata/customer/:customerId\" element={<CustomerDetails token={token} />} />\n              <Route path=\"/about\" element={<AboutUs />} />\n              <Route path=\"/help\" element={<HelpSupport />} />\n              <Route path=\"*\" element={<Navigate to=\"/dashboard\" />} />\n            </Routes>\n          ) : (\n            // Non-authenticated routes - user needs to login\n            <Routes>\n              <Route path=\"/login\" element={<Login setToken={setToken} setUser={setUser} />} />\n              <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n            </Routes>\n          )}\n        </div>\n\n        {/* Footer - Only show when user is logged in */}\n        {token && <Footer />}\n        \n        {/* ChatBot - Only show when user is logged in */}\n        {token && <ChatBot />}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}